<UserControl x:Class="VCPortal_WPF.UserControls.Projects.ProcCodeTrends.ProcCodeTrendsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VCPortal_WPF.UserControls.Projects.ProcCodeTrends"
             xmlns:modalcontrol="clr-namespace:ModalControl;assembly=ModalControl" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns:components="clr-namespace:VCPortal_WPF.Components" xmlns:converters="clr-namespace:VCPortal_WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

    </UserControl.Resources>



    <Grid>
        <Grid.Resources>

            <Style x:Key="ValidLabel" TargetType="{x:Type Label}">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Foreground" Value="DarkBlue" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>

            <Style x:Key="InvalidLabel" TargetType="{x:Type Label}">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>

            <Style x:Key="OptionalLabel" TargetType="{x:Type Label}">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="Foreground" Value="DarkGreen" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>

            <Style x:Key="DefaultBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Blue" />
                <Setter Property="BorderThickness" Value="2 2 2 2" />
                <Setter Property="Background" Value="LightBlue" />
            </Style>

            <Style x:Key="EIBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Orange" />
                <Setter Property="BorderThickness" Value="2 2 2 2" />
                <Setter Property="Background" Value="White" />
            </Style>

            <Style x:Key="IFPBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Orange" />
                <Setter Property="BorderThickness" Value="2 2 2 2" />
                <Setter Property="Background" Value="White" />
            </Style>

            <Style x:Key="CSBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Orange" />
                <Setter Property="BorderThickness" Value="2 2 2 2" />
                <Setter Property="Background" Value="White" />
            </Style>

            <converters:InverseAndBooleansToBooleanConverter x:Key="InverseAndBooleansToBooleanConverter"/>
            <converters:SearchFilterConverter x:Key="SearchFilterConverter"/>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>




        <modalcontrol:Modal x:Name="modalControl"  DataContext="{Binding Path=ProgressMessageViewModel}"  Grid.Row="0" Grid.RowSpan="2" Panel.ZIndex="100" IsOpen="{Binding Path=HasMessage}"  >
            <modalcontrol:Modal.Background>
                <SolidColorBrush Opacity=".5" Color="AliceBlue" />
            </modalcontrol:Modal.Background>
            <ContentControl  x:Name="modalContentControl" Height="600" Width="800" />
        </modalcontrol:Modal>

        <Grid Grid.Row="0" Background="LightGray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="55"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center" FontSize="19" Background="LightGray" FontFamily="Verdana"  FontWeight="ExtraBold" Text="{Binding CurrentTitle}"></TextBlock>
            <TextBlock DataContext="{Binding UserMessageViewModel}"  Text="{Binding Message}" Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="3" >
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <!-- Set the default value here (if any). 
                             If you set it directly on the button that will override the trigger. -->
                        <Setter Property="Foreground" Value="DarkGreen" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsError}"
                                         Value="True">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <telerik:RadButton x:Name="btnGenerateReport"  Grid.Row="0" Grid.Column="8" Width="170" Command="{Binding GenerateReportCallCommand}"  Content="Generate Report">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource InverseAndBooleansToBooleanConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding ElementName="cbxRegionFilter" Path="(SelectedItem)" />
                        <Binding ElementName="cbxMarketFilter" Path="(SelectedItem)" />
                        <Binding ElementName="cbxMajorMarketFilter" Path="(SelectedItem)" />
                        <Binding Path="CanRunReport"   />
                    </MultiBinding>
                </Button.IsEnabled>
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource SearchFilterConverter}" >
                        <Binding Path="SelectedValue" ElementName="cbxRegionFilter"/>
                        <Binding Path="SelectedValue" ElementName="cbxMarketFilter"/>
                        <Binding Path="SelectedValue" ElementName="cbxMajorMarketFilter"/>
                    </MultiBinding>
                </Button.CommandParameter>


            </telerik:RadButton>
        </Grid>

        <Grid Grid.Row="1" Background="GhostWhite">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>


            <Border Grid.Column="1" Grid.Row="1" Grid.RowSpan="3" Style="{StaticResource DefaultBorder}"/>
            <telerik:Label Grid.Row="1"   Grid.Column="1" Content="Select Region(s):" Margin="4" HorizontalAlignment="Left" Style="{StaticResource ValidLabel}"  />
            <components:SelectAllCheckComboBox  x:Name="cbxRegionFilter" Grid.Row="2"  Margin="10 10 10 10" Grid.Column="1" Command="{Binding RegionChangedCommand}" ItemsSource="{Binding Path=Region}" ItemSelectionChanged="cbx_ItemSelectionChanged" Loaded="cbx_Loaded">
            </components:SelectAllCheckComboBox>



            <Border Grid.Column="2" Grid.Row="1" Grid.RowSpan="3" Style="{StaticResource DefaultBorder}" />
            <telerik:Label  Grid.Row="1"    Grid.Column="2" Content="* Select Market(s):" Style="{StaticResource ValidLabel}" Margin="4"  HorizontalAlignment="Left"   />
            <components:SelectAllCheckComboBox  x:Name="cbxMarketFilter" Grid.Row="2"  Margin="10 10 10 10" Grid.Column="2" Command="{Binding MarketChangedCommand}" ItemsSource="{Binding Path=Market}" ItemSelectionChanged="cbx_ItemSelectionChanged" Loaded="cbx_Loaded">
            </components:SelectAllCheckComboBox>

            <Border Grid.Column="3" Grid.Row="1" Grid.RowSpan="3" Style="{StaticResource DefaultBorder}" />
            <telerik:Label  Grid.Row="1"    Grid.Column="3" Content="* Select Major Market(s):" Style="{StaticResource ValidLabel}" Margin="4"  HorizontalAlignment="Left"  />
            <components:SelectAllCheckComboBox  x:Name="cbxMajorMarketFilter" Grid.Row="2"  Margin="10 10 10 10" Grid.Column="3" Command="{Binding MajorMarketChangedCommand}" ItemsSource="{Binding Path=Major_Market}" ItemSelectionChanged="cbx_ItemSelectionChanged" Loaded="cbx_Loaded">
            </components:SelectAllCheckComboBox>

        </Grid>

    </Grid>
</UserControl>